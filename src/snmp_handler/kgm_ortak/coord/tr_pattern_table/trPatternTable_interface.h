/*
 * Note: this file originally auto-generated by mib2c
 * using mfd-interface.m2c
 */
/** @ingroup interface: Routines to interface to Net-SNMP
 *
 * \warning This code should not be modified, called directly,
 *          or used to interpret functionality. It is subject to
 *          change at any time.
 * 
 * @{
 */
/*
 * *********************************************************************
 * *********************************************************************
 * *********************************************************************
 * ***                                                               ***
 * ***  NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE  ***
 * ***                                                               ***
 * ***                                                               ***
 * ***       THIS FILE DOES NOT CONTAIN ANY USER EDITABLE CODE.      ***
 * ***                                                               ***
 * ***                                                               ***
 * ***       THE GENERATED CODE IS INTERNAL IMPLEMENTATION, AND      ***
 * ***                                                               ***
 * ***                                                               ***
 * ***    IS SUBJECT TO CHANGE WITHOUT WARNING IN FUTURE RELEASES.   ***
 * ***                                                               ***
 * ***                                                               ***
 * *********************************************************************
 * *********************************************************************
 * *********************************************************************
 */
#ifndef TRPATTERNTABLE_INTERFACE_H
#define TRPATTERNTABLE_INTERFACE_H

#ifdef __cplusplus
extern "C" {
#endif


#include "trPatternTable.h"


/* ********************************************************************
 * Table declarations
 */

/* PUBLIC interface initialization routine */
void _trPatternTable_initialize_interface(trPatternTable_registration * user_ctx,
                                    u_long flags);
void _trPatternTable_shutdown_interface(trPatternTable_registration * user_ctx);

trPatternTable_registration *
trPatternTable_registration_get( void );

trPatternTable_registration *
trPatternTable_registration_set( trPatternTable_registration * newreg );

netsnmp_container *trPatternTable_container_get( void );
int trPatternTable_container_size( void );

u_int trPatternTable_dirty_get( void );
void trPatternTable_dirty_set( u_int status );

    trPatternTable_rowreq_ctx * trPatternTable_allocate_rowreq_ctx(void *);
void trPatternTable_release_rowreq_ctx(trPatternTable_rowreq_ctx *rowreq_ctx);

int trPatternTable_index_to_oid(netsnmp_index *oid_idx,
                            trPatternTable_mib_index *mib_idx);
int trPatternTable_index_from_oid(netsnmp_index *oid_idx,
                              trPatternTable_mib_index *mib_idx);

/* *********************************************************************
 * Persistent declarations
 */
/*
 * persistence
 */
#define LINE_TERM_CHAR '$'

void trPatternTable_container_init_persistence( netsnmp_container * container );
int trPatternTable_container_should_save(trPatternTable_rowreq_ctx * rowreq_ctx);


/*
 * access to certain internals. use with caution!
 */
void trPatternTable_valid_columns_set(netsnmp_column_info *vc);


#ifdef __cplusplus
}
#endif

#endif /* TRPATTERNTABLE_INTERFACE_H */
/** @} */
