/*
 * Note: this file originally auto-generated by mib2c
 * using mfd-top.m2c
 */
#ifndef PEDESTRIANDETECTORCONTROLGROUPTABLE_H
#define PEDESTRIANDETECTORCONTROLGROUPTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(NTCIP1202-v03)
config_require(NTCIP1202-v03/pedestrianDetectorControlGroupTable/pedestrianDetectorControlGroupTable_interface)
config_require(NTCIP1202-v03/pedestrianDetectorControlGroupTable/pedestrianDetectorControlGroupTable_data_access)
config_require(NTCIP1202-v03/pedestrianDetectorControlGroupTable/pedestrianDetectorControlGroupTable_data_get)
config_require(NTCIP1202-v03/pedestrianDetectorControlGroupTable/pedestrianDetectorControlGroupTable_data_set)
    /* *INDENT-ON*  */

/* OID and column number definitions for pedestrianDetectorControlGroupTable */
#include "pedestrianDetectorControlGroupTable_oids.h"

/* enum definions */
#include "pedestrianDetectorControlGroupTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_pedestrianDetectorControlGroupTable(void);
void shutdown_pedestrianDetectorControlGroupTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table pedestrianDetectorControlGroupTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * NTCIP1202-v03::pedestrianDetectorControlGroupTable is subid 13 of detector.
 * Its status is Mandatory.
 * OID: .1.3.6.1.4.1.1206.4.2.1.2.13, length: 12
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review pedestrianDetectorControlGroupTable registration context.
     */
typedef netsnmp_data_list pedestrianDetectorControlGroupTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review pedestrianDetectorControlGroupTable data context structure.
 * This structure is used to represent the data for pedestrianDetectorControlGroupTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * pedestrianDetectorControlGroupTable.
 */
typedef struct pedestrianDetectorControlGroupTable_data_s {
    
        /*
         * pedestrianDetectorControlGroupActuation(2)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/R/d/h
         */
   long   pedestrianDetectorControlGroupActuation;
    
} pedestrianDetectorControlGroupTable_data;


/* *********************************************************************
 * TODO:115:o: |-> Review pedestrianDetectorControlGroupTable undo context.
 * We're just going to use the same data structure for our
 * undo_context. If you want to do something more efficent,
 * define your typedef here.
 */
typedef pedestrianDetectorControlGroupTable_data pedestrianDetectorControlGroupTable_undo_data;

/*
 * TODO:120:r: |-> Review pedestrianDetectorControlGroupTable mib index.
 * This structure is used to represent the index for pedestrianDetectorControlGroupTable.
 */
typedef struct pedestrianDetectorControlGroupTable_mib_index_s {

        /*
         * pedestrianDetectorControlGroupNumber(1)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/R/d/h
         */
   long   pedestrianDetectorControlGroupNumber;


} pedestrianDetectorControlGroupTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review pedestrianDetectorControlGroupTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
*/
#define MAX_pedestrianDetectorControlGroupTable_IDX_LEN     1


/* *********************************************************************
 * TODO:130:o: |-> Review pedestrianDetectorControlGroupTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * pedestrianDetectorControlGroupTable_rowreq_ctx pointer.
 */
typedef struct pedestrianDetectorControlGroupTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_pedestrianDetectorControlGroupTable_IDX_LEN];
    
    pedestrianDetectorControlGroupTable_mib_index        tbl_idx;
    
    pedestrianDetectorControlGroupTable_data              data;
    pedestrianDetectorControlGroupTable_undo_data       * undo;
    unsigned int                column_set_flags; /* flags for set columns */


    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to pedestrianDetectorControlGroupTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *pedestrianDetectorControlGroupTable_data_list;

} pedestrianDetectorControlGroupTable_rowreq_ctx;

typedef struct pedestrianDetectorControlGroupTable_ref_rowreq_ctx_s {
    pedestrianDetectorControlGroupTable_rowreq_ctx *rowreq_ctx;
} pedestrianDetectorControlGroupTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int pedestrianDetectorControlGroupTable_pre_request(pedestrianDetectorControlGroupTable_registration * user_context);
    int pedestrianDetectorControlGroupTable_post_request(pedestrianDetectorControlGroupTable_registration * user_context,
        int rc);

    int pedestrianDetectorControlGroupTable_rowreq_ctx_init(pedestrianDetectorControlGroupTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void pedestrianDetectorControlGroupTable_rowreq_ctx_cleanup(pedestrianDetectorControlGroupTable_rowreq_ctx *rowreq_ctx);

    int pedestrianDetectorControlGroupTable_check_dependencies(pedestrianDetectorControlGroupTable_rowreq_ctx * rowreq_ctx); 
    int pedestrianDetectorControlGroupTable_commit(pedestrianDetectorControlGroupTable_rowreq_ctx * rowreq_ctx);

    pedestrianDetectorControlGroupTable_rowreq_ctx *
     pedestrianDetectorControlGroupTable_row_find_by_mib_index(pedestrianDetectorControlGroupTable_mib_index *mib_idx);

extern const oid pedestrianDetectorControlGroupTable_oid[];
extern const int pedestrianDetectorControlGroupTable_oid_size;


#include "pedestrianDetectorControlGroupTable_interface.h"
#include "pedestrianDetectorControlGroupTable_data_access.h"
#include "pedestrianDetectorControlGroupTable_data_get.h"
#include "pedestrianDetectorControlGroupTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* PEDESTRIANDETECTORCONTROLGROUPTABLE_H */
/** @} */
