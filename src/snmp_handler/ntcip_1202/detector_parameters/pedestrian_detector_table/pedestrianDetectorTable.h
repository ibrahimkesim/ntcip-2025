/*
 * Note: this file originally auto-generated by mib2c
 * using mfd-top.m2c
 */
#ifndef PEDESTRIANDETECTORTABLE_H
#define PEDESTRIANDETECTORTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(NTCIP1202-v03);
config_require(NTCIP1202-v03/pedestrianDetectorTable/pedestrianDetectorTable_interface);
config_require(NTCIP1202-v03/pedestrianDetectorTable/pedestrianDetectorTable_data_access);
config_require(NTCIP1202-v03/pedestrianDetectorTable/pedestrianDetectorTable_data_get);
config_require(NTCIP1202-v03/pedestrianDetectorTable/pedestrianDetectorTable_data_set);
    /* *INDENT-ON*  */

/* OID and column number definitions for pedestrianDetectorTable */
#include "pedestrianDetectorTable_oids.h"

/* enum definions */
#include "pedestrianDetectorTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_pedestrianDetectorTable(void);
void shutdown_pedestrianDetectorTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table pedestrianDetectorTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * NTCIP1202-v03::pedestrianDetectorTable is subid 7 of detector.
 * Its status is Mandatory.
 * OID: .1.3.6.1.4.1.1206.4.2.1.2.7, length: 12
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review pedestrianDetectorTable registration context.
     */
typedef netsnmp_data_list pedestrianDetectorTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review pedestrianDetectorTable data context structure.
 * This structure is used to represent the data for pedestrianDetectorTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * pedestrianDetectorTable.
 */
typedef struct pedestrianDetectorTable_data_s {
    
        /*
         * pedestrianDetectorCallPhase(2)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/R/d/h
         */
   long   pedestrianDetectorCallPhase;
    
        /*
         * pedestrianDetectorNoActivity(3)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/R/d/h
         */
   long   pedestrianDetectorNoActivity;
    
        /*
         * pedestrianDetectorMaxPresence(4)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/R/d/h
         */
   long   pedestrianDetectorMaxPresence;
    
        /*
         * pedestrianDetectorErraticCounts(5)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/R/d/h
         */
   long   pedestrianDetectorErraticCounts;
    
        /*
         * pedestrianDetectorAlarms(6)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/R/d/h
         */
   long   pedestrianDetectorAlarms;
    
        /*
         * pedestrianDetectorReset(7)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/R/D/h
         */
   long   pedestrianDetectorReset;
    
        /*
         * pedestrianButtonPushTime(8)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/R/D/h
         */
   long   pedestrianButtonPushTime;
    
        /*
         * pedestrianDetectorOptions(9)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/R/D/h
         */
   long   pedestrianDetectorOptions;
    
} pedestrianDetectorTable_data;


/* *********************************************************************
 * TODO:115:o: |-> Review pedestrianDetectorTable undo context.
 * We're just going to use the same data structure for our
 * undo_context. If you want to do something more efficent,
 * define your typedef here.
 */
typedef pedestrianDetectorTable_data pedestrianDetectorTable_undo_data;

/*
 * TODO:120:r: |-> Review pedestrianDetectorTable mib index.
 * This structure is used to represent the index for pedestrianDetectorTable.
 */
typedef struct pedestrianDetectorTable_mib_index_s {

        /*
         * pedestrianDetectorNumber(1)/INTEGER/ASN_INTEGER/long(long)//l/A/w/e/R/d/h
         */
   long   pedestrianDetectorNumber;


} pedestrianDetectorTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review pedestrianDetectorTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
*/
#define MAX_pedestrianDetectorTable_IDX_LEN     1


/* *********************************************************************
 * TODO:130:o: |-> Review pedestrianDetectorTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * pedestrianDetectorTable_rowreq_ctx pointer.
 */
typedef struct pedestrianDetectorTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_pedestrianDetectorTable_IDX_LEN];
    
    pedestrianDetectorTable_mib_index        tbl_idx;
    
    pedestrianDetectorTable_data              data;
    pedestrianDetectorTable_undo_data       * undo;
    unsigned int                column_set_flags; /* flags for set columns */


    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to pedestrianDetectorTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *pedestrianDetectorTable_data_list;

} pedestrianDetectorTable_rowreq_ctx;

typedef struct pedestrianDetectorTable_ref_rowreq_ctx_s {
    pedestrianDetectorTable_rowreq_ctx *rowreq_ctx;
} pedestrianDetectorTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int pedestrianDetectorTable_pre_request(pedestrianDetectorTable_registration * user_context);
    int pedestrianDetectorTable_post_request(pedestrianDetectorTable_registration * user_context,
        int rc);

    int pedestrianDetectorTable_rowreq_ctx_init(pedestrianDetectorTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void pedestrianDetectorTable_rowreq_ctx_cleanup(pedestrianDetectorTable_rowreq_ctx *rowreq_ctx);

    int pedestrianDetectorTable_check_dependencies(pedestrianDetectorTable_rowreq_ctx * rowreq_ctx); 
    int pedestrianDetectorTable_commit(pedestrianDetectorTable_rowreq_ctx * rowreq_ctx);

    pedestrianDetectorTable_rowreq_ctx *
                  pedestrianDetectorTable_row_find_by_mib_index(pedestrianDetectorTable_mib_index *mib_idx);

extern const oid pedestrianDetectorTable_oid[];
extern const int pedestrianDetectorTable_oid_size;


#include "pedestrianDetectorTable_interface.h"
#include "pedestrianDetectorTable_data_access.h"
#include "pedestrianDetectorTable_data_get.h"
#include "pedestrianDetectorTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* PEDESTRIANDETECTORTABLE_H */
/** @} */
