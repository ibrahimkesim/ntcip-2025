/*
 * Note: this file originally auto-generated by mib2c
 * using generic-table-enums.m2c
 */
#ifndef CABINETENVIRONDEVICESTABLE_ENUMS_H
#define CABINETENVIRONDEVICESTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table cabinetEnvironDevicesTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * cabinetEnvironDeviceType (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef CABINETENVIRONDEVICETYPE_ENUMS
#define CABINETENVIRONDEVICETYPE_ENUMS

#define CABINETENVIRONDEVICETYPE_OTHER  1 
#define CABINETENVIRONDEVICETYPE_DOOR  2 
#define CABINETENVIRONDEVICETYPE_FAN  3 
#define CABINETENVIRONDEVICETYPE_HEATER  4 
#define CABINETENVIRONDEVICETYPE_FLOATSWITCH  5 

#endif /* CABINETENVIRONDEVICETYPE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * cabinetEnvironDeviceOnStatus (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef CABINETENVIRONDEVICEONSTATUS_ENUMS
#define CABINETENVIRONDEVICEONSTATUS_ENUMS

#define CABINETENVIRONDEVICEONSTATUS_TRUE  1 
#define CABINETENVIRONDEVICEONSTATUS_FALSE  2 

#endif /* CABINETENVIRONDEVICEONSTATUS_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * cabinetEnvironDeviceErrorStatus (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef CABINETENVIRONDEVICEERRORSTATUS_ENUMS
#define CABINETENVIRONDEVICEERRORSTATUS_ENUMS

#define CABINETENVIRONDEVICEERRORSTATUS_OTHER  1 
#define CABINETENVIRONDEVICEERRORSTATUS_NOERROR  2 
#define CABINETENVIRONDEVICEERRORSTATUS_FAIL  3 
#define CABINETENVIRONDEVICEERRORSTATUS_NOTMONITORED  4 

#endif /* CABINETENVIRONDEVICEERRORSTATUS_ENUMS */




#ifdef __cplusplus
}
#endif

#endif /* CABINETENVIRONDEVICESTABLE_ENUMS_H */
