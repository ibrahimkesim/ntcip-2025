/*
 * Note: this file originally auto-generated by mib2c
 * using mfd-interface.m2c
 */
/** @ingroup interface: Routines to interface to Net-SNMP
 *
 * \warning This code should not be modified, called directly,
 *          or used to interpret functionality. It is subject to
 *          change at any time.
 * 
 * @{
 */
/*
 * *********************************************************************
 * *********************************************************************
 * *********************************************************************
 * ***                                                               ***
 * ***  NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE NOTE  ***
 * ***                                                               ***
 * ***                                                               ***
 * ***       THIS FILE DOES NOT CONTAIN ANY USER EDITABLE CODE.      ***
 * ***                                                               ***
 * ***                                                               ***
 * ***       THE GENERATED CODE IS INTERNAL IMPLEMENTATION, AND      ***
 * ***                                                               ***
 * ***                                                               ***
 * ***    IS SUBJECT TO CHANGE WITHOUT WARNING IN FUTURE RELEASES.   ***
 * ***                                                               ***
 * ***                                                               ***
 * *********************************************************************
 * *********************************************************************
 * *********************************************************************
 */
#ifndef CABINETENVIRONDEVICESTABLE_INTERFACE_H
#define CABINETENVIRONDEVICESTABLE_INTERFACE_H

#ifdef __cplusplus
extern "C" {
#endif


#include "cabinetEnvironDevicesTable.h"


/* ********************************************************************
 * Table declarations
 */

/* PUBLIC interface initialization routine */
void _cabinetEnvironDevicesTable_initialize_interface(cabinetEnvironDevicesTable_registration * user_ctx,
                                    u_long flags);
void _cabinetEnvironDevicesTable_shutdown_interface(cabinetEnvironDevicesTable_registration * user_ctx);

cabinetEnvironDevicesTable_registration *
cabinetEnvironDevicesTable_registration_get( void );

cabinetEnvironDevicesTable_registration *
cabinetEnvironDevicesTable_registration_set( cabinetEnvironDevicesTable_registration * newreg );

netsnmp_container *cabinetEnvironDevicesTable_container_get( void );
int cabinetEnvironDevicesTable_container_size( void );

u_int cabinetEnvironDevicesTable_dirty_get( void );
void cabinetEnvironDevicesTable_dirty_set( u_int status );

    cabinetEnvironDevicesTable_rowreq_ctx * cabinetEnvironDevicesTable_allocate_rowreq_ctx(void *);
void cabinetEnvironDevicesTable_release_rowreq_ctx(cabinetEnvironDevicesTable_rowreq_ctx *rowreq_ctx);

int cabinetEnvironDevicesTable_index_to_oid(netsnmp_index *oid_idx,
                            cabinetEnvironDevicesTable_mib_index *mib_idx);
int cabinetEnvironDevicesTable_index_from_oid(netsnmp_index *oid_idx,
                              cabinetEnvironDevicesTable_mib_index *mib_idx);

/* *********************************************************************
 * Persistent declarations
 */
/*
 * persistence
 */
#define LINE_TERM_CHAR '$'

void cabinetEnvironDevicesTable_container_init_persistence( netsnmp_container * container );
int cabinetEnvironDevicesTable_container_should_save(cabinetEnvironDevicesTable_rowreq_ctx * rowreq_ctx);


/*
 * access to certain internals. use with caution!
 */
void cabinetEnvironDevicesTable_valid_columns_set(netsnmp_column_info *vc);


#ifdef __cplusplus
}
#endif

#endif /* CABINETENVIRONDEVICESTABLE_INTERFACE_H */
/** @} */
